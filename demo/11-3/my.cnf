[mysqld]
# skip-log-bin
# 开启通用查询日志
general_log             = 1

#设置通用查查询日志路径
general_log_file        = /var/log/mysql/query.log

# 设置错误日志路径
log_error = /var/log/mysql/error.log

#开启慢查日志
slow_query_log                = 1 

## 指定慢查日志路径
slow_query_log_file   = /var/log/mysql/mysql-slow.log

#超过2秒的sql记录日志，默认10秒（注意是大于，等于2秒的sql则不会被记录）
long_query_time = 2


# 配置binlog的格式
binlog_format=mixed
# binlog_cache_size
sync_binlog=10

#第一种方式:
#开启binlog日志
log_bin=ON
#binlog日志的基本文件名
log_bin_basename=/var/lib/mysql/mysql-bin
#binlog文件的索引文件，管理所有binlog文件
log_bin_index=/var/lib/mysql/mysql-bin.index
#配置serverid（不能重复）
#server-id用于标识数据库实例，防止在链式主从、多主多从架构中导致SQL语句的无限循环
#当从库发现server-id相同时，会跳过该event
server-id=1

#第二种方式:
#此一行等同于上面log_bin三行
log-bin=/var/lib/mysql/mysql-bin
#配置serverid
server-id=1


# 配置从服务器（Slave）上并行复制的方式。LOGICAL_CLOCK 指定了基于逻辑时钟的并行复制方式。在这种方式下，MySQL 使用逻辑时钟来决定哪些事务可以并行执行。逻辑时钟是一个递增的计数器，它确保了并行执行的事务之间的一致性。
slave-parallel-type=LOGICAL_CLOCK
slave-parallel-workers=16


# 启用半同步复制
plugin-load-add = semisync_master.so
plugin-load-add = semisync_slave.so

# 设置半同步复制为开启状态
rpl_semi_sync_master_enabled = 1
rpl_semi_sync_slave_enabled = 1

# 可选：设置等待从服务器确认的超时时间，默认为 10 秒
rpl_semi_sync_master_timeout = 10000


# 默认保存30天
binlog_expire_logs_seconds    = 2592000

#单个binlog文件的大小限制，如果二进制日志写入的内容大小超出给定值，日志就会发生滚动（关闭当前文件，重新打开一个新的日志文件）。不能将该变量设置为大于1GB或小于4096B，默认值是100M
max_binlog_size   = 100M

# binlog_do_db          = include_database_name
# binlog_ignore_db      = include_database_name

# 指定 db1 db2 记录binlog
binlog_do_db = db1
binlog_do_db = db2

# 不让 db3 db4 记录binlog
binlog_ignore_db = db3
binlog_ignore_db = db4

# innodb BufferPool缓存池大小
innodb_buffer_pool_size = 8G 

# innodb BufferPool缓存池个数
innodb_buffer_pool_instances = 2

# 缓存页的大小
innodb_page_size = 16KB

# redo log文件大小
innodb_log_file_size = 128M

# redo log文件个数
innodb_log_files_in_group = 2




